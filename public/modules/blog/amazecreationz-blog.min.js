var blog = angular.module('amazecreationz.blog' ,['ui.router', 'ngAnimate', 'ngMaterial', 'ngSanitize']);

blog.permissions = {
    ADMIN: 0,
    BLOGGER: 1,
    USER: 2,
    VISITOR: 3
};

blog.default = {
    name: 'Amaze Creationz Blog',
    theme: 'grey',
    dateFormat: 'MMM dd, yyyy hh:mm',
    showSideBar: true,
    category: 'Personal',
    categories: [{
        id: 'Personal',
        name: 'Personal',
        permission: blog.permissions.VISITOR
    },{
        id: 'Technical',
        name: 'Technical',
        permission: blog.permissions.VISITOR
    },{
        id: 'Travel',
        name: 'Travel',
        permission: blog.permissions.VISITOR
    },{
        id: 'Logs',
        name: 'Logs',
        permission: blog.permissions.BLOGGER
    }],
    menu: {
        new: {
            name: 'New Post',
            icon: 'note_add',
            function: 'newPost',
            show: true
        },
        edit: {
            name: 'Edit Post',
            icon: 'edit',
            function: 'editPost',
            show: false
        },
        delete : {
            name: 'Delete Post',
            icon: 'delete',
            function: 'deletePost',
            show: false
        }
    }
};

blog.config(function($mdThemingProvider) {
  $mdThemingProvider.theme('blog')
	.primaryPalette(amazecreationz_blog.theme || blog.default.theme, {
		'default': '800',
      	'hue-1': '300',
      	'hue-2': '700',
      	'hue-3': '900'
	})
	.accentPalette(amazecreationz_blog.theme || blog.default.theme, {
		'default': '100',
      	'hue-1': '100',
      	'hue-2': '100',
      	'hue-3': '100'
	});
});
blog.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider){

	$stateProvider.state('blog', {
		url:'/blog',
		templateUrl: '/modules/blog/blog-home.html',
		controller: 'BlogController'
	});

	$stateProvider.state('blog.new', {
		url:'/new',
		templateUrl: '/modules/blog/posts/blog-new-post.html',
		controller: 'NewPostController'
	});

	$stateProvider.state('blog.allposts', {
		url:'/:category',
		templateUrl: '/modules/blog/blog-all-posts.html',
		controller: 'PostsController'
	});

	$stateProvider.state('blog.post', {
		url:'/view/:id',
		templateUrl: '/modules/blog/posts/blog-post.html',
		controller: 'PostController'
	});

	$stateProvider.state('blog.edit', {
		url:'/edit/:id',
		templateUrl: '/modules/blog/posts/blog-new-post.html',
		controller: 'EditPostController'
	});
}]);
blog.controller('BlogController', ['$scope', '$state', '$stateParams', function($scope, $state, $stateParams){
    $scope.$parent.current_tab = 'blog';
    $scope.blog = {
        permissions: angular.copy(blog.permissions),
        name: angular.copy(amazecreationz_blog.name || blog.default.name),
        theme: angular.copy(amazecreationz_blog.theme || blog.default.theme),
        dateFormat: angular.copy(amazecreationz_blog.dateFormat || blog.default.dateFormat),
        showSideBar: angular.copy(amazecreationz_blog.showSideBar && blog.default.showSideBar),
        default_category: angular.copy(amazecreationz_blog.category || blog.default.category),        
        categories: angular.copy(amazecreationz_blog.categories || blog.default.categories),
        posts: {},
        user: {
            permissions: blog.permissions.VISITOR
        }
    }
    var blog_ref = firebase.database().ref('blog');

    $scope.blog.changeCategory = function(category) {
        $state.go('blog.allposts',{category: category}, {reload: true});
    }

    $scope.blog.viewTaggedPosts = function(chip) {
        console.log(chip)
    }

    $scope.blog.newPost = function() {
        $state.go('blog.new');
    }

    $scope.blog.editPost = function() {
        $state.go('blog.edit', {category: $scope.blog.category, id: $scope.blog.id});
    }

    $scope.blog.deletePost = function() {
        blog_ref.child('post-title').child($scope.blog.id).set(null);
        blog_ref.child('post-content').child($scope.blog.id).set(null);
        $state.go('blog.allposts', {category: $scope.blog.category});
    }

    $scope.blog.menuAction = function(menuFunction) {
        $scope.blog[menuFunction]();
    }

    blog_ref.child('post-title').orderByChild('last_modified').limitToLast(20).on('child_added', function(data){
        $scope.blog.posts[data.key] = data.val();
        _.defer(function(){$scope.$apply();});
    });

    blog_ref.child('post-title').orderByChild('last_modified').limitToLast(20).on('child_changed', function(data){
        $scope.blog.posts[data.key] = data.val();
        _.defer(function(){$scope.$apply();});
    });

    blog_ref.child('post-title').orderByChild('last_modified').limitToLast(20).on('child_removed', function(data){
        delete $scope.blog.posts[data.key];
        _.defer(function(){$scope.$apply();});
    });

    firebase.auth().onAuthStateChanged(function(user) {
        if(user){	
	    	$scope.blog.user = {
				name: user.displayName,
				email: user.email,
				image: user.photoURL,
				uid: user.uid,
				permission: permissions.USER
			}
			_.defer(function(){$scope.$apply();});
			
            firebase.database().ref('blog/isBlogger').on('value', function(data){
				if(data.val()){
					$scope.blog.user.permission = permissions.BLOGGER;
					_.defer(function(){$scope.$apply();});
				}	
			});

            firebase.database().ref('blog/isAdmin').on('value', function(data){
				if(data.val()){
					$scope.blog.user.permission = permissions.ADMIN;
					_.defer(function(){$scope.$apply();});
				}	
			});
		}
    });
    
    if($state.current.name == 'blog') {
        $state.go('blog.allposts', {category: $scope.blog.default_category});
    }
}]);

blog.controller('PostsController', ['$scope', '$state', '$stateParams', function($scope, $state, $stateParams){
    $scope.blog.menu = angular.copy(amazecreationz_blog.menu || blog.default.menu);
    $scope.blog.category = $stateParams.category || $scope.blog.default_category;
    $scope.blog.changeCategory = function(category) {
        $state.go('blog.allposts',{category: category}, {reload: true});
    }
}]);

blog.controller('NewPostController', ['$scope', '$state', '$stateParams', function($scope, $state, $stateParams){
    $scope.blog.menu = null;
    $scope.blog.category = $stateParams.category || $scope.blog.default_category;
    var blog_ref = firebase.database().ref('blog');
    $scope.blog.post = {
        title: "Post title goes here..",
        description: "Post description goes here..",
        content: "Post Content here..",
        category: $scope.blog.category,
        authors: {}
    }

    $scope.blog.changeCategory = function(category) {
        $scope.blog.post.category = category;
        $state.go('blog.new',{category: category});
    }

    $scope.blog.previewPost = function() {
        $('.body-container').animate({
	        scrollTop: $('#post-preview').offset().top + 20
	    }, 800);
    }

    $scope.blog.savePost = function() {
        $scope.blog.id = blog_ref.child('post-content').push().key;
        $scope.blog.post.id = $scope.blog.id;
        blog_ref.child('post-content').child($scope.blog.id).set({
            content: $scope.blog.post.content
        });
        var post_title = angular.copy($scope.blog.post);
        delete post_title.content;
        blog_ref.child('post-title').child($scope.blog.id).set(post_title);
        $state.go('blog.post', {category: $scope.blog.post.category, id: $scope.blog.id});
    }

    firebase.auth().onAuthStateChanged(function(user) {
        if(user){
            $scope.blog.post.authors[user.uid] = user.displayName;
            _.defer(function(){$scope.$apply();});	
        }
    });
    
}]);

blog.controller('PostController', ['$scope', '$state', '$stateParams', function($scope, $state, $stateParams){ 
    $scope.blog.menu = angular.copy(amazecreationz_blog.menu || blog.default.menu);
    $scope.blog.menu.edit.show = true;
    $scope.blog.menu.delete.show = true;
    $scope.blog.id = $stateParams.id;
    $scope.blog.post = {
        id: $scope.blog.id
    }

    $scope.blog.postLoader = {
        title: false,
        content: false
    }

    $scope.blog.changeCategory = function(category) {
        $state.go('blog.allposts',{category: category}, {reload: true});
    }

    var blog_ref = firebase.database().ref('blog');
    blog_ref.child('post-content').child($scope.blog.id).on('value', function(data){
        $scope.blog.post = angular.extend($scope.blog.post,data.val());
        delete $scope.blog.postLoader.content;
        _.defer(function(){$scope.$apply();});
    });

    blog_ref.child('post-title').child($scope.blog.id).on('value', function(data){
        $scope.blog.post = angular.extend($scope.blog.post,data.val());
        $scope.blog.category = $scope.blog.post.category || $scope.blog.default_category;
        delete $scope.blog.postLoader.title;
        _.defer(function(){$scope.$apply();});
    });
}]);

blog.controller('EditPostController', ['$scope', '$state', '$stateParams', function($scope, $state, $stateParams){
    $scope.blog.menu = angular.copy(amazecreationz_blog.menu || blog.default.menu);
    $scope.blog.menu.delete.show = true; 
    $scope.blog.id = $stateParams.id;
    $scope.blog.post = {};
    var blog_ref = firebase.database().ref('blog');

    $scope.blog.changeCategory = function(category) {
        $scope.blog.post.category = category;
        $state.go('blog.edit',{category: category});
    }

    $scope.blog.previewPost = function() {
        $('.body-container').animate({
	        scrollTop: $('#post-preview').offset().top - 80
	    }, 800);
    }

    $scope.blog.savePost = function() {
        $scope.blog.post.id = $scope.blog.id;
        blog_ref.child('post-content').child($scope.blog.id).set({
            content: $scope.blog.post.content
        })
        var post_title = angular.copy($scope.blog.post);
        delete post_title.content;
        blog_ref.child('post-title').child($scope.blog.id).set(post_title);
        $state.go('blog.post', {category: $scope.blog.post.category, id: $scope.blog.id});
    }

    blog_ref.child('post-content').child($scope.blog.id).on('value', function(data){
        $scope.blog.post = angular.extend($scope.blog.post, data.val());
        _.defer(function(){$scope.$apply();});
    });

    blog_ref.child('post-title').child($scope.blog.id).on('value', function(data){
        $scope.blog.post = angular.extend($scope.blog.post, data.val());
        $scope.blog.date_input = angular.copy($scope.blog.post.last_modified);
        $scope.blog.category = $scope.blog.post.category || $scope.blog.default_category;
        _.defer(function(){$scope.$apply();});
    });
}]);
blog.directive("blogImgLoad", [function() {
    return {
        restrict: "A",
        scope: {
            image: '='
        },
        link: function(scope, elements, attributes) {
            scope.$watch('image', function(image){
                var img_url = angular.isDefined(attributes.url) ? attributes.url+image : anandmoghan.globals.image.root_url+image;
                var img = new Image();
                img.src = img_url;
                
                img.onload = function() {
                  $(elements[0]).css({'background-image':'url('+img.src+')'});
                } 
            });            
        }
    }
}]);

blog.directive("blogTags", [function() {
    return {
        restrict: "E",
        scope: {
            tags: '=',
            function: '=',
            theme: '='
        },
        templateUrl: '/modules/blog/widgets/tags.html',
        link: function(scope, elements, attributes) {
        }
    }
}]);

blog.directive("blogPicker", [function() {
    return {
        restrict: "E",
        scope: {
            inputValue: '=',
            lastModified: '='
        },
        templateUrl: '/modules/blog/widgets/date-time-picker.html',
        link: function(scope, elements, attributes) {
            scope.currentDate = new Date();
            scope.maxDate = new Date();
            scope.currentTime = new Date(Math.floor(new Date().getTime()/60000)*60000);
            scope.changeDate = function() {
                var day = scope.currentDate.getDate();
                var month = scope.currentDate.getMonth();
                var year = scope.currentDate.getFullYear();
                var hours = scope.currentTime.getHours();
                var minutes = scope.currentTime.getMinutes();
                scope.lastModified = new Date(year, month, day, hours, minutes, 0, 0).getTime();
            }

            scope.$watch('inputValue', function(value){
                if(value) {
                    scope.currentDate = new Date(value);
                    scope.currentTime = new Date(Math.floor(value/60000)*60000);
                }
                scope.changeDate();
            })
        }
    }
}]);

blog.filter('category', function() {
    return function(input, search) {
        if (!input) return input;
        if (!search || search == 'all') return input;

        var result = {};
        angular.forEach(input, function(value, key) {
            if (value.category == search) {
                result[key] = value;
            }
        });
        return result;
    }
});

blog.filter('isEmpty', function() {
    return function(input) {
        if(angular.equals(input, {})){
            return true
        }
        return false;
    }
});

blog.filter('orderObjectBy', function() {
  return function(items, field, reverse) {
    var filtered = [];
    angular.forEach(items, function(item) {
      filtered.push(item);
    });
    filtered.sort(function (a, b) {
      return (a[field] > b[field] ? 1 : -1);
    });
    if(reverse) filtered.reverse();
    return filtered;
  };
});
